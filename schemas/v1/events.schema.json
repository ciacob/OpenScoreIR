{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://ciacob.github.io/OpenScoreIR/schemas/v1/events.schema.json",
    "$defs": {
        "Event": {
            "type": "object",
            "properties": {
                "kind": {
                    "enum": [
                        "regular",
                        "grace",
                        "percussion"
                    ],
                    "default": "regular"
                },
                "duration": {
                    "$ref": "./common.schema.json#/$defs/Fraction"
                },
                "pitches": {
                    "type": "array",
                    "items": {
                        "$ref": "./common.schema.json#/$defs/MidiValue"
                    },
                    "minItems": 1
                },
                "notes": {
                    "type": "array",
                    "items": {
                        "$ref": "./common.schema.json#/$defs/NoteInstance"
                    },
                    "minItems": 1
                },
                "noteSymbol": {
                    "$ref": "./common.schema.json#/$defs/NoteSymbol"
                },
                "attachments": {
                    "$ref": "./attachables.schema.json#/$defs/AttachableInstances"
                },
                "midiOuts": {
                    "$ref": "./attachables.schema.json#/$defs/AttachableInstances"
                },
                "useSlash": {
                    "$comment": "Only applies when `kind` is `grace`.",
                    "type": "boolean",
                    "default": true
                },
                "useSlur": {
                    "$comment": "Only applies when `kind` is `grace`.",
                    "type": "boolean",
                    "default": true
                },
                "stealNext": {
                    "$comment": "Only applies when `kind` is `grace`.",
                    "type": "boolean",
                    "default": false
                },
                "setId": {
                    "$comment": "Only applies when `kind` is `percussion`.",
                    "$ref": "./common.schema.json#/$defs/Uuid"
                },
                "strikes": {
                    "$comment": "Only applies when `kind` is `percussion`.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1
                }
            },
            "required": [
                "duration"
            ],
            "if": {
                "properties": {
                    "kind": {
                        "const": "percussion"
                    }
                }
            },
            "then": {
                "required": [
                    "setId",
                    "strikes"
                ],
                "properties": {
                    "setId": {},
                    "strikes": {},
                    "pitches": false,
                    "notes": false
                }
            },
            "unevaluatedProperties": false
        },
        "EventGroup": {
            "type": "object",
            "properties": {
                "kind": {
                    "type": "string",
                    "enum": [
                        "tuplet",
                        "beam"
                    ]
                },
                "groupEvents": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/$defs/Event"
                            },
                            {
                                "$ref": "#/$defs/EventGroup"
                            }
                        ]
                    },
                    "minItems": 1
                },
                "numTupletBeats": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 128
                },
                "numRegularBeats": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 128
                },
                "tupletBeatDuration": {
                    "$ref": "./common.schema.json#/$defs/Fraction"
                },
                "regularBeatDuration": {
                    "$ref": "./common.schema.json#/$defs/Fraction"
                }
            },
            "required": [
                "kind",
                "groupEvents"
            ],
            "if": {
                "properties": {
                    "kind": {
                        "const": "tuplet"
                    }
                }
            },
            "then": {
                "properties": {
                    "numTupletBeats": {},
                    "numRegularBeats": {},
                    "tupletBeatDuration": {},
                    "regularBeatDuration": {}
                },
                "required": [
                    "numTupletBeats",
                    "numRegularBeats",
                    "tupletBeatDuration",
                    "regularBeatDuration"
                ]
            },
            "else": {
                "not": {
                    "anyOf": [
                        {
                            "required": [
                                "numTupletBeats"
                            ]
                        },
                        {
                            "required": [
                                "numRegularBeats"
                            ]
                        },
                        {
                            "required": [
                                "tupletBeatDuration"
                            ]
                        },
                        {
                            "required": [
                                "regularBeatDuration"
                            ]
                        }
                    ]
                }
            },
            "unevaluatedProperties": false
        },
        "MusicSpan": {
            "type": "object",
            "properties": {
                "kind": {
                    "enum": [
                        "regular",
                        "multiRest"
                    ],
                    "default": "regular"
                },
                "part": {
                    "$ref": "./common.schema.json#/$defs/Uuid"
                },
                "measure": {
                    "$ref": "./common.schema.json#/$defs/Uuid"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/$defs/Event"
                            },
                            {
                                "$ref": "#/$defs/EventGroup"
                            }
                        ]
                    }
                },
                "fromMeasure": {
                    "$ref": "./common.schema.json#/$defs/Uuid"
                },
                "toMeasure": {
                    "$ref": "./common.schema.json#/$defs/Uuid"
                }
            },
            "oneOf": [
                {
                    "properties": {
                        "kind": {
                            "const": "regular"
                        },
                        "part": {},
                        "measure": {},
                        "events": {}
                    },
                    "required": [
                        "part",
                        "measure",
                        "events"
                    ]
                },
                {
                    "properties": {
                        "kind": {
                            "const": "multiRest"
                        },
                        "part": {},
                        "fromMeasure": {},
                        "toMeasure": {}
                    },
                    "required": [
                        "part",
                        "fromMeasure",
                        "toMeasure"
                    ],
                    "not": {
                        "anyOf": [
                            {
                                "required": [
                                    "measure"
                                ]
                            },
                            {
                                "required": [
                                    "events"
                                ]
                            }
                        ]
                    }
                }
            ],
            "unevaluatedProperties": false
        },
        "MusicSpans": {
            "type": "object",
            "propertyNames": {
                "$ref": "./common.schema.json#/$defs/Uuid"
            },
            "additionalProperties": {
                "$ref": "#/$defs/MusicSpan"
            }
        }
    }
}