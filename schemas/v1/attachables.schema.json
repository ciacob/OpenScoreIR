{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://ciacob.github.io/OpenScoreIR/schemas/v1/attachables.schema.json",
    "$comment": "Serves for both attachments and MIDI modules, which are formally identical.",
    "$defs": {
        "HostKind": {
            "type": "string",
            "enum": [
                "measures",
                "events",
                "pitches"
            ]
        },
        "HostTypes": {
            "type": "array",
            "minItems": 1,
            "items": {
                "$ref": "#/$defs/HostKind"
            }
        },
        "HostFilter": {
            "type": "object",
            "required": [
                "baseType"
            ],
            "additionalProperties": false,
            "properties": {
                "baseType": {
                    "$ref": "#/$defs/HostKind"
                },
                "filter": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "kind": {
                            "type": "string",
                            "enum": [
                                "comparison",
                                "function"
                            ],
                            "default": "comparison"
                        },
                        "source": {
                            "type": "string"
                        },
                        "operator": {
                            "type": "string",
                            "enum": [
                                "is",
                                "isNot",
                                "startsWith",
                                "endsWith",
                                "includes",
                                "doesNotInclude",
                                "greaterThan",
                                "lessThan"
                            ]
                        },
                        "value": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "number"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        }
                    },
                    "required": [
                        "source",
                        "operator",
                        "value"
                    ]
                }
            }
        },
        "ParamValueTypes": {
            "$comment": "The simple types a `ParamValue` can be (when it is not an Object with `label` and `values` keys).",
            "type": [
                "string",
                "integer",
                "number",
                "boolean"
            ]
        },
        "ParamValue": {
            "$comment": "This validates the entities that populate the `values` Array of each parameter entity.",
            "oneOf": [
                {
                    "$ref": "#/$defs/ParamValueTypes"
                },
                {
                    "type": "object",
                    "properties": {
                        "label": {
                            "type": "string"
                        },
                        "value": {
                            "$ref": "#/$defs/ParamValueTypes"
                        },
                        "default": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "label",
                        "value"
                    ],
                    "additionalProperties": false
                }
            ]
        },
        "AttachableParameter": {
            "$comment": "This validates the entity that goes right beneath `params`, e.g., the `duration` parameter for the `fermata` attachment.",
            "oneOf": [
                {
                    "$comment": "Parameters can simply be strings, booleans, etc., without further inner structure.",
                    "type": "string",
                    "enum": [
                        "enum",
                        "string",
                        "int",
                        "number",
                        "bool"
                    ]
                },
                {
                    "$comment": "Or, they can be Objects with `kind` and `values` properties. Observe that `kind` uses `int`, not `integer`.",
                    "type": "object",
                    "properties": {
                        "kind": {
                            "type": "string",
                            "enum": [
                                "enum",
                                "string",
                                "int",
                                "number",
                                "bool"
                            ]
                        },
                        "values": {
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/ParamValue"
                            },
                            "minItems": 1
                        }
                    },
                    "required": [
                        "kind"
                    ],
                    "allOf": [
                        {
                            "if": {
                                "properties": {
                                    "kind": {
                                        "const": "enum"
                                    }
                                }
                            },
                            "then": {
                                "required": [
                                    "values"
                                ]
                            },
                            "else": {
                                "not": {
                                    "required": [
                                        "values"
                                    ]
                                }
                            }
                        }
                    ],
                    "additionalProperties": false
                }
            ]
        },
        "AttachableDefinition": {
            "$comment": "This validates a attachable entity (e.g., an Object placed under `$definitions/attachments`).",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "hosts": {
                    "oneOf": [
                        {
                            "$ref": "#/$defs/HostTypes"
                        },
                        {
                            "$ref": "#/$defs/HostFilter"
                        }
                    ]
                },
                "params": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/$defs/AttachableParameter"
                    }
                },
                "required": [
                    "name",
                    "hosts"
                ],
                "additionalProperties": false
            }
        },
        "AttachableDefinitions": {
            "type": "object",
            "propertyNames": {
                "$ref": "./common.schema.json#/$defs/Uuid"
            },
            "additionalProperties": {
                "$ref": "#/$defs/AttachableDefinition"
            }
        },
        "AttachableInstance": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "./common.schema.json#/$defs/Uuid"
                },
                "params": {
                    "type": "object",
                    "minProperties": 1,
                    "additionalProperties": true
                }
            },
            "required": [
                "id"
            ]
        },
        "AttachableInstances": {
            "type": "object",
            "propertyNames": {
                "pattern": "^(0|[0-9]|[1-9][0-9])$"
            },
            "additionalProperties": {
                "oneOf": [
                    {
                        "$ref": "./common.schema.json#/$defs/Uuid"
                    },
                    {
                        "type": "array",
                        "items": {
                            "$ref": "./common.schema.json#/$defs/Uuid"
                        },
                        "minItems": 1
                    },
                    {
                        "$ref": "#/$defs/AttachableInstance"
                    },
                    {
                        "type": "array",
                        "items": {
                            "$ref": "#/$defs/AttachableInstance"
                        },
                        "minItems": 1
                    }
                ]
            }
        }
    }
}